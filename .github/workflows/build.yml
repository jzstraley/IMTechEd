name: build
on:
  push:
    branches:
      - master
  workflow_dispatch:
  pull_request:
  release:
    types:
      - published

env:
  NODE_VERSION: 18.x
  PYTHON_VERSION: 3.x

permissions:
  contents: read

jobs:
  npm-build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js runtime
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Node.js dependency cache
        uses: actions/cache@v4
        id: cache
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          path: node_modules

      - name: Set up Node.js dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build project
        run: |
          npm run build
          git diff --name-only

  npm-check:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js runtime
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Node.js dependency cache
        uses: actions/cache@v4
        id: cache
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          path: node_modules

      - name: Set up Node.js dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Check project
        run: npm run check

  python:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python runtime
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            requirements.txt

      - name: Set up Python dependencies
        run: pip install --upgrade build twine

      - name: Build Python package
        run: python -m build